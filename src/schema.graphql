type Query {
  items: [Item!]!
  cart: [Item!]!
  me: User
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  addItem(name: String!, description: String!, price: Float!, stock: Int!, imgUrl: String!): Item
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  roles: [Role!]!
  orders: [Order!]!
}

type Item {
  id: ID!
  name: String!
  description: String!
  price: Float!
  qty: Int
  stock: Int!
  imgUrl: String!
}

## The user adds an item to its order list, the user sees its cart through 
## query of orders where: status === InCart.

type Order {
  id: ID!
  item: Item!
  status: Status!
}

enum Status {
  InCart
  Shipped
  Delivered
}
enum Role {
  USER
  ADMIN
}